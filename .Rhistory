shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
states <-
data.frame(STATE = state.abb, region = tolower(state.name))
View(states)
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
install.packages("Hmisc")
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='longwei', token='63B0347367E331F041B28465DFD046ED', secret='RJlGbM+ufeu6mWMatb/5hgZCRtmrtxjbYAtt/vBH')
library(shinyapps)
setwd("weather-shiny-app/")
deployApp()
devtools::install_github('muschellij2/slidify')
devtools::install_github('muschellij2/slidify')
devtools::install_github('muschellij2/slidify')
devtools::install_github('muschellij2/slidify')
devtools::install_github('muschellij2/slidify')
library(devtools)
devtools::install_github('muschellij2/slidify')
library(stringr)
install.packages(stringr)
install.packages("stringr")
install.packages("stringr")
remove.packages("stringr")
install.packages("stringr")
remove.packages("stringr")
install.packages("stringr")
update.packages()
update.packages()
devtools::install_github('muschellij2/slidify')
install.packages("stringi")
install.packages("ggthemes")
install.packages("ggplot2")
devtools::install_github('muschellij2/slidify')
installed.packages('devtools')
install.packages('devtools')
library(devtools)
install.packages('devtools')
install.packages('xml2')
install.packages('Rccp')
install.packages('rccp')
install.packages('devtools')
setwd("severe-weather-app-pitch/")
library(slidify)
slidify("index.Rmd")
getwd()
source("../weather-shiny-app/R/severe-weather-functions.R")
load_libraries()
load_data("../weather-shiny-app/data/severe-weather-compact-db.csv")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
shiny::runApp('~/ownCloud/Projets/Data-Science/coursera/9_Developping_data_products/Project-Assignement/severe-weather-usa-app/weather-shiny-app')
dim(weather)
names(weather)
str(weather)
names(weather)
dim(weather)
dim(weather)[1,]
dim(weather)[1]
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
names(weather)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
hist(weather$DMG)
hist(log(weather$DMG))
hist(log(weather$health_impact))
hist(log(weather$DMG + 1)/2 + 3 * log(weather$health_impact + 1))
hist(log(weather$health_impact))
hist(log(weather$DMG))
hist(log(weather$DMG + 1)/2 + 3 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1))
max(log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1))
m <- max(log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1)/m*100)
hist(log(weather$DMG + 1)/1 + 3 * log(weather$health_impact + 1)/m*100)
hist(log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1)*2)
hist(log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1))
hist((log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1))/m*100)
hist((log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1))/m*100)
hist((log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1))/m*100)
m <- max(log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1))
m
hist((log(weather$DMG + 1)/1.5 + 3 * log(weather$health_impact + 1))/m*100)
m <- max(log(weather$DMG + 1)/1.1 + 3 * log(weather$health_impact + 1))
m
m <- max(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))
m
hist(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.1 + 5 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.1 + 2 * log(weather$health_impact + 1))
hist(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?scale_fill_gradient
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shinyapps::deployApp('weather-shiny-app/')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
ax(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
with(weather, {
hist(log(health_impact))
hist(log(DMG))
hist(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))
hist((log(DMG + 1)/1.1 + 4 * log(health_impact + 1))/max(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
}
)
with(weather, {
max(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
max(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))*100)
max(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))*100
hist(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
hist(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
hist((log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
hist((log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))*100)
hist((log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))*100)
hist((log(weather$DMG + 1)/1.5 + 4 * log(weather$health_impact + 1))*100)
par(mfrow = c(2,2))
with(weather, {
hist(log(health_impact))
hist(log(DMG))
hist(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))
hist((log(DMG + 1)/1.1 + 4 * log(health_impact + 1))/max(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
}
)
max(log(DMG + 1)/1.1 + 4 * log(health_impact + 1))*100)
max(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))*100)
max(log(weather$DMG + 1)/1.1 + 4 * log(weather$health_impact + 1))*100
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
source("./weather-shiny-app/R/severe-weather-functions.R")
load_libraries()
load_data("./weather-shiny-app/data/severe-weather-compact-db.csv")
weather <- load_data("./weather-shiny-app/data/severe-weather-compact-db.csv")
max(weather$riskIndex)
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
find_best_month(weather)
View(weather)
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shiny::runApp('weather-shiny-app')
shinyapps::deployApp('weather-shiny-app/')
setwd("severe-weather-app-pitch/")
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?hist
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
shiny::runApp('~/ownCloud/Projets/Data-Science/coursera/9_Developping_data_products/Project-Assignement/severe-weather-usa-app/weather-shiny-app')
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
